using System;
using System.Threading;

namespace BankAccountWithCriticalSection
{
    class Program
    {
        static void Main(string[] args)
        {
            BankAccount account = new BankAccount("John Doe", 1000.00);
            Thread[] threads = new Thread[2];

            for (int i = 0; i < 2; i++)
            {
                threads[i] = new Thread(() =>
                {
                    for (int j = 0; j < 1000; j++)
                    {
                        // Gọi phương thức Rút và Gửi tiền trong Critical Section
                        lock (account)
                        {
                            double withdrawAmount = 5.00;
                            if (account.Withdraw(withdrawAmount))
                            {
                                account.Deposit(withdrawAmount);
                            }
                        }
                    }
                });
            }

            foreach (Thread thread in threads)
            {
                thread.Start();
            }

            foreach (Thread thread in threads)
            {
                thread.Join();
            }

            Console.WriteLine($"Số dư cuối cùng: {account.GetBalance():C}");
        }
    }

    class BankAccount
    {
        private string accountHolder;
        private double balance;

        public BankAccount(string accountHolder, double initialBalance)
        {
            this.accountHolder = accountHolder;
            this.balance = initialBalance;
        }

        public string GetAccountHolderName()
        {
            return accountHolder;
        }

        public double GetBalance()
        {
            return balance;
        }

        public bool Withdraw(double amount)
        {
            if (amount <= balance)
            {
                balance -= amount;
                return true;
            }
            else
            {
                return false;
            }
        }

        public void Deposit(double amount)
        {
            balance += amount;
        }
    }
}
